# Name of your application. Used to uniquely configure containers.
service: staffplan-redux

# Name of the container image.
image: fermion/staffplan-redux

# Deploy to these servers.
servers:
  - 159.65.172.245

# Credentials for your image host.
registry:
  username: fermion
  password:
    - DOCKER_REGISTRY_TOKEN

# Inject ENV variables into containers (secrets come from .env).
# Remember to run `kamal env push` after making changes!
env:
  clear:
    DB_HOST: 159.65.172.245
  secret:
    - RAILS_MASTER_KEY
    - POSTGRES_PASSWORD
    - DOCKER_REGISTRY_TOKEN

  # Use a different ssh user than root
  # ssh:
  #   user: app

  # Configure builder setup.
  # builder:
  #   args:
  #     RUBY_VERSION: 3.2.0
  #   secrets:
  #     - GITHUB_TOKEN
  #   remote:
  #     arch: amd64
  #     host: ssh://app@192.168.0.1

# Use accessory services (secrets come from .env).
accessories:
  db:
    image: postgres:15
    host: 159.65.172.245
    port: 5432
    env:
      clear:
        POSTGRES_USER: 'staffplan_redux'
        POSTGRES_DB: 'staffplan_redux_production'
      secret:
        - POSTGRES_PASSWORD
    directories:
      - data:/var/lib/postgresql/data
#   redis:
#     image: redis:7.0
#     host: 192.168.0.2
#     port: 6379
#     directories:
#       - data:/data

# Configure custom arguments for Traefik
# traefik:
#   args:
#     accesslog: true
#     accesslog.format: json

# Configure a custom healthcheck (default is /up on port 3000)
# healthcheck:
#   path: /healthz
#   port: 4000

# Bridge fingerprinted assets, like JS and CSS, between versions to avoid
# hitting 404 on in-flight requests. Combines all files from new and old
# version inside the asset_path.
# asset_path: /rails/public/assets

# Configure rolling deploys by setting a wait time between batches of restarts.
# boot:
#   limit: 10 # Can also specify as a percentage of total hosts, such as "25%"
#   wait: 2
